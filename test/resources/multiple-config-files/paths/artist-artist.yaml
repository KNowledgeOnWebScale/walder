get:
  summary: Returns a list of songs and movies for a given artist.
  parameters:
    - in: path
      name: artist
      required: true
      schema:
        type: string
      description: The target artist
  x-walder-query:
    graphql-query:
      songs: >
        {
          label @single
          writer(label_en: $artist)  @single
          artist  @single(scope: all) {
            label
          }
        }
      films: >
        {
          id @single
          ... on Film {
            starring(label_en: $artist) @single
          }
        }
    json-ld-context: >
      {
        "@context": {
          "label": "http://www.w3.org/2000/01/rdf-schema#label",
          "label_en": { "@id": "http://www.w3.org/2000/01/rdf-schema#label", "@language": "en" },
          "writer": "http://dbpedia.org/ontology/writer",
          "artist": "http://dbpedia.org/ontology/musicalArtist",
          "Film": "http://dbpedia.org/ontology/Film",
          "starring": "http://dbpedia.org/ontology/starring"
        }
      }
  responses:
    200:
      description: list of songs and movies
      x-walder-input-text/html: songs-movies.handlebars
