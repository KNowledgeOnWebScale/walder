meta:
  resources:
    path: ../../example
    views: views
    pipe-modules: pipeModules
    public: public
  datasources:
    hypermedia:
      - http://fragments.dbpedia.org/2016-04/en
paths:
  /movies/{actor}:
    get:
      summary: Returns a list of the all movies the given actor stars in
      graphql-query: >
        {
          id @single
          ... on Film {
            starring(label: $actor) @single
          }
        }
      json-ld-context: >
        {
          "@context": {
            "Film": "http://dbpedia.org/ontology/Film",
            "label": { "@id": "http://www.w3.org/2000/01/rdf-schema#label", "@language": "en" },
            "starring": "http://dbpedia.org/ontology/starring"
          }
        }
      postprocessing:
        filterT:
          source: filterT.js
      html: movies.pug