{"version":3,"file":"Sparqlee.js","sourceRoot":"","sources":["../../bin/Sparqlee.ts"],"names":[],"mappings":";;AACA,4BAA4B;;AAE5B,qDAA4C;AAE5C,mEAAgE;AAChE,wCAAwC;AAExC,MAAM,KAAK,GAAG;;;CAGb,CAAC;AAEF,SAAS,QAAQ,CAAC,IAAY;IAC5B,OAAO;;;;;;oCAM2B,IAAI;CACvC,CAAC;AACF,CAAC;AAED,SAAS,KAAK,CAAC,KAAa;IAC1B,MAAM,WAAW,GAAG,2BAAS,CAAC,KAAK,CAAC,CAAC;IACrC,gDAAgD;IAChD,OAAO,WAAW,CAAC,KAAK,CAAC,UAAU,CAAC;AACtC,CAAC;AAED,KAAK,UAAU,IAAI;IACjB,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;QAC3B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,OAAO;KACR;IAED,MAAM,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9B,MAAM,UAAU,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;IAE1C,MAAM,SAAS,GAAG,IAAI,6BAAa,CAAC,UAAU,CAAC,CAAC;IAEhD,MAAM,MAAM,GAAG,SAAS,CAAC,QAAQ,CAAC,gBAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAEhD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACtB,CAAC;AAED,IAAI,EAAE,CAAC","sourcesContent":["#! /usr/bin/env node\n// tslint:disable:no-console\n\nimport { translate } from 'sparqlalgebrajs';\n\nimport { SyncEvaluator } from '../lib/evaluators/SyncEvaluator';\nimport { Bindings } from '../lib/Types';\n\nconst USAGE = `\nUsage: sparqlee <expression>\nExample: sparqlee 'concat(\"foo\", \"bar\")'\n`;\n\nfunction template(expr: string) {\n  return `\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\nPREFIX fn: <https://www.w3.org/TR/xpath-functions#>\nPREFIX err: <http://www.w3.org/2005/xqt-errors#>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n\nSELECT * WHERE { ?s ?p ?o FILTER (${expr})}\n`;\n}\n\nfunction parse(query: string) {\n  const sparqlQuery = translate(query);\n  // Extract filter expression from complete query\n  return sparqlQuery.input.expression;\n}\n\nasync function main() {\n  if (process.argv.length < 3) {\n    console.log(USAGE);\n    return;\n  }\n\n  const input = process.argv[2];\n  const expression = parse(template(input));\n\n  const evaluator = new SyncEvaluator(expression);\n\n  const result = evaluator.evaluate(Bindings({}));\n\n  console.log(result);\n}\n\nmain();\n"]}