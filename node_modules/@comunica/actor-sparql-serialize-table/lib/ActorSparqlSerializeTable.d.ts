/// <reference types="node" />
import { ActorSparqlSerializeFixedMediaTypes, IActionSparqlSerialize, IActorSparqlSerializeFixedMediaTypesArgs, IActorSparqlSerializeOutput } from "@comunica/bus-sparql-serialize";
import { ActionContext } from "@comunica/core";
import { Readable } from "stream";
/**
 * A comunica Table Sparql Serialize Actor.
 */
export declare class ActorSparqlSerializeTable extends ActorSparqlSerializeFixedMediaTypes implements IActorSparqlSerializeTableArgs {
    readonly columnWidth: number;
    readonly padding: string;
    constructor(args: IActorSparqlSerializeTableArgs);
    static repeat(str: string, count: number): string;
    testHandleChecked(action: IActionSparqlSerialize, context: ActionContext): Promise<boolean>;
    pad(str: string): string;
    pushHeader(data: Readable, labels: string[]): void;
    runHandle(action: IActionSparqlSerialize, mediaType: string, context: ActionContext): Promise<IActorSparqlSerializeOutput>;
}
export interface IActorSparqlSerializeTableArgs extends IActorSparqlSerializeFixedMediaTypesArgs {
    columnWidth: number;
}
