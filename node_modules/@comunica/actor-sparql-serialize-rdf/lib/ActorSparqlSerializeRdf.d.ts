import { IActorArgsMediaTyped } from "@comunica/actor-abstract-mediatyped";
import { IActorQueryOperationOutput } from "@comunica/bus-query-operation";
import { IActionRootRdfSerialize, IActorOutputRootRdfSerialize, IActorTestRootRdfSerialize } from "@comunica/bus-rdf-serialize";
import { ActorSparqlSerialize, IActionSparqlSerialize, IActorSparqlSerializeOutput } from "@comunica/bus-sparql-serialize";
import { ActionContext, Actor, IActorTest, Mediator } from "@comunica/core";
/**
 * A comunica RDF SPARQL Serialize Actor.
 *
 * It serializes quad streams (for example resulting from a CONSTRUCT query)
 * to an RDF syntax.
 */
export declare class ActorSparqlSerializeRdf extends ActorSparqlSerialize implements IActorSparqlSerializeRdfArgs {
    readonly mediatorRdfSerialize: Mediator<Actor<IActionRootRdfSerialize, IActorTestRootRdfSerialize, IActorOutputRootRdfSerialize>, IActionRootRdfSerialize, IActorTestRootRdfSerialize, IActorOutputRootRdfSerialize>;
    readonly mediatorMediaTypeCombiner: Mediator<Actor<IActionRootRdfSerialize, IActorTestRootRdfSerialize, IActorOutputRootRdfSerialize>, IActionRootRdfSerialize, IActorTestRootRdfSerialize, IActorOutputRootRdfSerialize>;
    constructor(args: IActorSparqlSerializeRdfArgs);
    testHandle(action: IActorQueryOperationOutput, mediaType: string, context: ActionContext): Promise<IActorTest>;
    runHandle(action: IActorQueryOperationOutput, mediaType: string, context: ActionContext): Promise<IActorSparqlSerializeOutput>;
    testMediaType(context: ActionContext): Promise<boolean>;
    getMediaTypes(context: ActionContext): Promise<{
        [id: string]: number;
    }>;
}
export interface IActorSparqlSerializeRdfArgs extends IActorArgsMediaTyped<IActionSparqlSerialize, IActorTest, IActorSparqlSerializeOutput> {
    mediatorRdfSerialize: Mediator<Actor<IActionRootRdfSerialize, IActorTestRootRdfSerialize, IActorOutputRootRdfSerialize>, IActionRootRdfSerialize, IActorTestRootRdfSerialize, IActorOutputRootRdfSerialize>;
    mediatorMediaTypeCombiner: Mediator<Actor<IActionRootRdfSerialize, IActorTestRootRdfSerialize, IActorOutputRootRdfSerialize>, IActionRootRdfSerialize, IActorTestRootRdfSerialize, IActorOutputRootRdfSerialize>;
}
