import { Algebra } from "sparqlalgebrajs";
import { ActorQueryOperationTypedMediated, IActorQueryOperationOutputBindings, IActorQueryOperationTypedMediatedArgs } from "@comunica/bus-query-operation";
import { ActionContext, IActorTest } from "@comunica/core";
/**
 * A comunica OrderBy Sparqlee Query Operation Actor.
 */
export declare class ActorQueryOperationOrderBySparqlee extends ActorQueryOperationTypedMediated<Algebra.OrderBy> {
    private window;
    constructor(args: IActorQueryOperationOrderBySparqleeArgs);
    testOperation(pattern: Algebra.OrderBy, context: ActionContext): Promise<IActorTest>;
    runOperation(pattern: Algebra.OrderBy, context: ActionContext): Promise<IActorQueryOperationOutputBindings>;
    private extractSortExpression;
    private isAscending;
}
/**
 * The window parameter determines how many of the elements to consider when sorting.
 */
export interface IActorQueryOperationOrderBySparqleeArgs extends IActorQueryOperationTypedMediatedArgs {
    window?: number;
}
