"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const bus_rdf_resolve_quad_pattern_1 = require("@comunica/bus-rdf-resolve-quad-pattern");
/**
 * A comunica RDFJS Source RDF Resolve Quad Pattern Actor.
 */
class ActorRdfResolveQuadPatternRdfJsSource extends bus_rdf_resolve_quad_pattern_1.ActorRdfResolveQuadPatternSource {
    constructor(args) {
        super(args);
    }
    async test(action) {
        if (!this.hasContextSingleSourceOfType('rdfjsSource', action.context)) {
            throw new Error(this.name + ' requires a single source with an rdfjsSource to be present in the context.');
        }
        const source = this.getContextSource(action.context);
        if (typeof source === 'string' || !source.value.match) {
            throw new Error(this.name + ' received an invalid rdfjsSource.');
        }
        return true;
    }
    getMetadata(source, pattern, context, data) {
        // TODO: this should be optimized so that RDFJS sources can expose totalItems metadata
        return () => Promise.resolve({});
    }
    async getSource(context) {
        return this.getContextSource(context).value;
    }
}
exports.ActorRdfResolveQuadPatternRdfJsSource = ActorRdfResolveQuadPatternRdfJsSource;
//# sourceMappingURL=ActorRdfResolveQuadPatternRdfJsSource.js.map