import { ActorRdfResolveQuadPatternSource, IActionRdfResolveQuadPattern, IActorRdfResolveQuadPatternOutput, ILazyQuadSource } from "@comunica/bus-rdf-resolve-quad-pattern";
import { ActionContext, IActorArgs, IActorTest } from "@comunica/core";
import { AsyncIterator } from "asynciterator";
import * as RDF from "rdf-js";
/**
 * A comunica RDFJS Source RDF Resolve Quad Pattern Actor.
 */
export declare class ActorRdfResolveQuadPatternRdfJsSource extends ActorRdfResolveQuadPatternSource {
    constructor(args: IActorArgs<IActionRdfResolveQuadPattern, IActorTest, IActorRdfResolveQuadPatternOutput>);
    test(action: IActionRdfResolveQuadPattern): Promise<IActorTest>;
    protected getMetadata(source: ILazyQuadSource, pattern: RDF.BaseQuad, context: ActionContext, data: AsyncIterator<RDF.Quad> & RDF.Stream): () => Promise<{
        [id: string]: any;
    }>;
    protected getSource(context: ActionContext): Promise<ILazyQuadSource>;
}
