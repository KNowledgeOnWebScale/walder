"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const bus_query_operation_1 = require("@comunica/bus-query-operation");
const AbstractFilterHash_1 = require("./AbstractFilterHash");
/**
 * A comunica Hash Query Operation Actor.
 */
class AbstractBindingHash extends bus_query_operation_1.ActorQueryOperationTypedMediated {
    constructor(args, operator) {
        super(args, operator);
        if (!AbstractFilterHash_1.AbstractFilterHash.doesHashAlgorithmExist(this.hashAlgorithm)) {
            throw new Error("The given hash algorithm is not present in this version of Node: " + this.hashAlgorithm);
        }
        if (!AbstractFilterHash_1.AbstractFilterHash.doesDigestAlgorithmExist(this.digestAlgorithm)) {
            throw new Error("The given digest algorithm is not present in this version of Node: " + this.digestAlgorithm);
        }
    }
    async testOperation(pattern, context) {
        return true;
    }
    async runOperation(pattern, context) {
        const output = bus_query_operation_1.ActorQueryOperation.getSafeBindings(await this.mediatorQueryOperation.mediate({ operation: pattern.input, context }));
        const bindingsStream = output.bindingsStream.filter(this.newHashFilter(this.hashAlgorithm, this.digestAlgorithm));
        return { type: 'bindings', bindingsStream, metadata: output.metadata, variables: output.variables };
    }
}
exports.AbstractBindingHash = AbstractBindingHash;
//# sourceMappingURL=AbstractBindingsHash.js.map