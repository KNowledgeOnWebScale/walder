import { IActionRootRdfParse, IActorOutputRootRdfParse, IActorTestRootRdfParse } from "@comunica/bus-rdf-parse";
import { ActorRdfParseHtml, IActionRdfParseHtml, IActorRdfParseHtmlOutput } from "@comunica/bus-rdf-parse-html";
import { Actor, IActorArgs, IActorTest, Mediator } from "@comunica/core";
/**
 * A HTML script RDF Parse actor that listens on the 'rdf-parse' bus.
 *
 * It is able to extract and parse any RDF serialization from script tags in HTML files
 * and announce the presence of them by media type.
 */
export declare class ActorRdfParseHtmlScript extends ActorRdfParseHtml {
    private readonly mediatorRdfParseMediatypes;
    private readonly mediatorRdfParseHandle;
    constructor(args: IActorRdfParseHtmlScriptArgs);
    test(action: IActionRdfParseHtml): Promise<IActorTest>;
    run(action: IActionRdfParseHtml): Promise<IActorRdfParseHtmlOutput>;
}
export interface IActorRdfParseHtmlScriptArgs extends IActorArgs<IActionRdfParseHtml, IActorTest, IActorRdfParseHtmlOutput> {
    mediatorRdfParseMediatypes: Mediator<Actor<IActionRootRdfParse, IActorTestRootRdfParse, IActorOutputRootRdfParse>, IActionRootRdfParse, IActorTestRootRdfParse, IActorOutputRootRdfParse>;
    mediatorRdfParseHandle: Mediator<Actor<IActionRootRdfParse, IActorTestRootRdfParse, IActorOutputRootRdfParse>, IActionRootRdfParse, IActorTestRootRdfParse, IActorOutputRootRdfParse>;
}
