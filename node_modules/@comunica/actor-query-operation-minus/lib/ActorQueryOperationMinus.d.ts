import { AbstractFilterHash, IActorInitRdfDereferencePagedArgs } from "@comunica/actor-abstract-bindings-hash";
import { Bindings, IActorQueryOperationOutputBindings } from "@comunica/bus-query-operation";
import { ActionContext } from "@comunica/core";
import { Algebra } from "sparqlalgebrajs";
/**
 * A comunica Minus Query Operation Actor.
 */
export declare class ActorQueryOperationMinus extends AbstractFilterHash<Algebra.Minus> {
    constructor(args: IActorInitRdfDereferencePagedArgs);
    newHashFilter(hashAlgorithm: string, digestAlgorithm: string, commons: {
        [variableName: string]: boolean;
    }, hashes: {
        [id: string]: boolean;
    }): (bindings: Bindings) => boolean;
    runOperation(pattern: Algebra.Minus, context: ActionContext): Promise<IActorQueryOperationOutputBindings>;
    /**
     * This function puts all common values between 2 arrays in a map with `value` : true
     */
    private getCommonVariables;
}
