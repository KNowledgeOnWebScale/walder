import { ActorAbstractPath } from "@comunica/actor-abstract-path";
import { IActorQueryOperationOutput, IActorQueryOperationOutputBindings, IActorQueryOperationTypedMediatedArgs } from "@comunica/bus-query-operation";
import { ActorRdfJoin, IActionRdfJoin } from "@comunica/bus-rdf-join";
import { ActionContext, Mediator } from "@comunica/core";
import { IMediatorTypeIterations } from "@comunica/mediatortype-iterations";
import { Algebra } from "sparqlalgebrajs";
/**
 * A comunica Path Seq Query Operation Actor.
 */
export declare class ActorQueryOperationPathSeq extends ActorAbstractPath {
    readonly mediatorJoin: Mediator<ActorRdfJoin, IActionRdfJoin, IMediatorTypeIterations, IActorQueryOperationOutput>;
    constructor(args: IActorQueryOperationPathSeq);
    runOperation(path: Algebra.Path, context: ActionContext): Promise<IActorQueryOperationOutputBindings>;
}
export interface IActorQueryOperationPathSeq extends IActorQueryOperationTypedMediatedArgs {
    mediatorJoin: Mediator<ActorRdfJoin, IActionRdfJoin, IMediatorTypeIterations, IActorQueryOperationOutput>;
}
