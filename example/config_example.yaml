resources:
  path: ./
  views: views
  pipe-modules: pipeModules
  public: public
datasources:
  hypermedia:
    - http://fragments.dbpedia.org/2016-04/en
paths:
  /movies/brad_pitt_directors:
    get:
      summary: Returns a list of all movies Brad Pitt stars in with their directors
      graphql-query: >
        {
          label @single @id
          director @single(scope: all) {
           label
          }
          starring(label_en: "Brad Pitt")  @single
        }
      json-ld-context: >
        {
         "@context": {
           "label": "http://www.w3.org/2000/01/rdf-schema#label",
           "label_en": { "@id": "http://www.w3.org/2000/01/rdf-schema#label", "@language": "en" },
           "director": "http://dbpedia.org/ontology/director",
           "starring": "http://dbpedia.org/ontology/starring"
         }
        }
      html: movies.handlebars
  /movies/brad_pitt:
    get:
      summary: Returns a paginated list of all movies Brad Pitt stars in
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 0
          description: The page that must be shown.
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
          description: Maximum number of elements to be shown on the current page.
      graphql-query: >
        {
          id @single
          ... on Film{
            starring(label: "Brad Pitt" first: $limit offset: $offset) @single
          }
        }
      json-ld-context: >
        {
          "@context": {
            "Film": "http://dbpedia.org/ontology/Film",
            "label": { "@id": "http://www.w3.org/2000/01/rdf-schema#label", "@language": "en" },
            "starring": "http://dbpedia.org/ontology/starring"
          }
        }
      html: movies.handlebars
  /movies/{actor}:
    get:
      summary: Returns a list of the all movies the given actor stars in
      graphql-query: >
        {
          id @single
          ... on Film {
            starring(label: $actor) @single
          }
        }
      json-ld-context: >
        {
          "@context": {
            "Film": "http://dbpedia.org/ontology/Film",
            "label": { "@id": "http://www.w3.org/2000/01/rdf-schema#label", "@language": "en" },
            "starring": "http://dbpedia.org/ontology/starring"
          }
        }
      html: movies.pug
  /movies/{actor}/postprocessed:
    get:
      summary: Returns a list of the all movies the given actor stars in, filtered on movie titles containing 'A' and 'T'
      graphql-query: >
        {
          id @single
          ... on Film {
            starring(label: $actor) @single
          }
        }
      json-ld-context: >
        {
          "@context": {
            "Film": "http://dbpedia.org/ontology/Film",
            "label": { "@id": "http://www.w3.org/2000/01/rdf-schema#label", "@language": "en" },
            "starring": "http://dbpedia.org/ontology/starring"
          }
        }
      postprocessing:
        filterT:
          source: filterT.js
      html: movies.pug