datasources:
  sparql:
    - http://dbpedia.org/sparql
paths:
  /movies/brad_pitt:
    get:
      summary: Returns a paginated list of all movies Brad Pitt stars in
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 0
          description: The page that must be shown.
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
          description: Maximum number of elements to be shown on the current page.
      postprocessing:
              filterA:
                source: https://raw.githubusercontent.com/driesmarzougui/random/master/filter.js
              filterB:
                source: /Users/driesmarzougui/Documents/work/IDLab/KNoWS/walter/example/filterB.js
      graphql-query: >
        {
          id @single
          ... on Film{
            starring(label: "Brad Pitt" first: $limit offset: $offset) @single
          }
        }
      json-ld-context: >
        {
          "@context": {
            "Film": "http://dbpedia.org/ontology/Film",
            "label": { "@id": "http://www.w3.org/2000/01/rdf-schema#label", "@language": "en" },
            "starring": "http://dbpedia.org/ontology/starring"
          }
        }
      html: TBD
  /movies/{actor}:
    get:
      summary: Returns a list of the all movies the given actor stars in
      graphql-query: >
        {
          id @single
          ... on Film {
            starring(label: $actor) @single
          }
        }
      json-ld-context: >
        {
          "@context": {
            "Film": "http://dbpedia.org/ontology/Film",
            "label": { "@id": "http://www.w3.org/2000/01/rdf-schema#label", "@language": "en" },
            "starring": "http://dbpedia.org/ontology/starring"
          }
        }
      html: TBD
  /movies:
      get:
        summary: Returns a list of the all movies the given actor stars in
        graphql-query: >
          {
            id @single
            ... on Film {
              starring(label: $actor) @single
            }
          }
        json-ld-context: >
          {
            "@context": {
              "Film": "http://dbpedia.org/ontology/Film",
              "label": { "@id": "http://www.w3.org/2000/01/rdf-schema#label", "@language": "en" },
              "starring": "http://dbpedia.org/ontology/starring"
            }
          }
        html: TBD
